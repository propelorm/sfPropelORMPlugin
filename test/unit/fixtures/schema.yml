propel:
  _attributes:      { defaultIdMethod: none, package: lib.model }
  _propel_behaviors:
    timestampable:
      boolean: true
      create_column: create_date

  ab_group:
    _attributes:    { phpName: Group, package: foo.bar.lib.model }
    id:
    name:           varchar(50)
    type:           varchar(50)
    _inheritance:
      column:       type
      classes:
        tight:      Group_Tight
        loose:      { phpName: Group_Loose, package: some.other.package }

  cd_user:
    _attributes:    { phpName: User, isI18N: true, i18nTable: cd_user_i18n }
    first_name:     { type: varchar, size: 255, default: "Anonymous" }
    last_name:      varchar(50)
    age:            { type: integer, required: true, index: true }
    is_alive:       { type: boolean, default: true }
    is_dead:       { type: boolean, required: true, default: false }
    ab_group_id:
    created_at:

  cd_user_i18n:
    description:    longvarchar

  ef_article:
    title:          { type: longvarchar, required: true, index: unique }
    stripped_title: { type: longvarchar, required: true, primaryKey: true, sequence: my_custom_sequence_name }
    user_id:
    my_group:       { type: integer, foreignTable: ab_group, foreignReference: id, onDelete: setnull }
    my_other_group: { type: integer, foreignTable: ab_group, foreignReference: id, onDelete: setnull, phpName: MyOtherGroupPhpName, fkPhpName: MyOtherGroupFkPhpName, fkRefPhpName: MyOtherGroupFkRefPhpName }
    created_at:     timestamp
    updated_at:

  ij_article:
    _attributes:    { phpName: Article }
    title:          varchar(50)
    user_id:        { type: integer }
    _foreignKeys:
      -
        foreignTable: cd_user
        onDelete:     cascade
        phpName:      SomePhpName
        refPhpName:   SomeRefPhpName
        references:
          - { local: user_id, foreign: id }
    created_at:
    _indexes:
      my_index:       [title(10), user_id]
    _uniques:
      my_other_index: [created_at(10)]
    _behaviors:
      paranoid: { column: deleted_at }
      act_as_nested_set:
    _propel_behaviors:
      paranoid: { column: deleted_at }
      act_as_nested_set:
    _vendor:
      Charset: utf8

  kl_article:
    title:          varchar(50)
    user_id:        { type: integer, phpName: AuthorId }
    _foreignKeys:
      -
        foreignClass: User
        phpName: Author
        references:
          - { local: user_id, foreign: id }

  ab_group_i18n:
    motto:            longvarchar

  history:
    _attributes:    { phpName: History }
    id:
    type:           { type: varchar(64) }
    _inheritance:
      column:       type
      classes:
        new_user:   History_NewUser
        new_page:   History_NewPage

  my_nested_sets:
    _attributes: { phpName: myNestedSetNode }
    id:
    lft:    { type: integer, required: true }
    rgt:    { type: integer, required: true }
    scope:  { type: integer, required: true }
    _nestedSet:
      left:   lft
      right:  rgt
      scope:  scope
